apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: thanos
  namespace: thanos
spec:
  destination:
    namespace: thanos
    server: https://kubernetes.default.svc
  project: default
  source:
    helm:
      values: |
        image:
          registry: harbor.tkg.sv-services.at/cache
          repository: bitnami/thanos
        objstoreConfig: |
          type: S3
          config:
            bucket: "tkg-thanos"
            endpoint: "XXXXXXXXX"
            access_key: "XXXXXXXX"
            insecure: false
            secret_key: "XXXXXXXXXXXXXXXXX"
            http_config:
              idle_conn_timeout: 1m30s
              response_header_timeout: 2m
              insecure_skip_verify: true
              tls_handshake_timeout: 10s
              expect_continue_timeout: 1s
              max_idle_conns: 100
              max_idle_conns_per_host: 100
              max_conns_per_host: 0
              disable_compression: false
            bucket_lookup_type: virtual-hosted
        serviceAccount:
          create: true
          name: "thanos-sa"
        query:
          enabled: true
          stores: []
          extraFlags:
            - --store=dns+thanos-stores.tkg.sv-services.at:10901
          args: []
          dnsDiscovery:
            sidecarsService: kube-prometheus-prometheus-thanos
            sidecarsNamespace: base-prometheus
          resources:
            limits: {}
            requests: {}
          rbac:
            create: true
          pspEnabled: true
          autoscaling:
            enabled: false
          ingress:
            enabled: true
            hostname: thanos.tkg.sv-services.at
            ingressClassName: "contour"
            annotations: {}
            extraHosts: []
            extraTls:
              - hosts:
                - thanos.tkg.sv-services.at
                secretName: thanos.tkg.sv-services.at-tls
            secrets: []
            extraRules: []
            tls: true
            selfSigned: false
            apiVersion: ""
            path: /
            pathType: ImplementationSpecific
            grpc:
              enabled: false
              hostname: thanos-grpc.local
              ingressClassName: ""
              annotations: {}
              extraHosts: []
              extraTls: []
              secrets: []
              extraRules: []
              tls: false
              selfSigned: false
              apiVersion: ""
              path: /
              pathType: ImplementationSpecific
        queryFrontend:
          enabled: true
          resources:
            limits: {}
            requests: {}
          rbac:
            create: true
          pspEnabled: true
          ingress:
            enabled: false
            hostname: thanos.local
            ingressClassName: ""
            annotations: {}
            extraHosts: []
            extraTls: []
            secrets: []
            extraRules: []
            tls: false
            selfSigned: false
            apiVersion: ""
            path: /
            pathType: ImplementationSpecific
        storegateway:
          enabled: true
          config: ""
          serviceAccount:
            create: false
            name: thanos-sa
          resources:
            limits:
              memory: 4Gi
            requests:
              memory: 2Gi
          persistence:
            enabled: true
            storageClass: ""
            accessModes:
              - ReadWriteOnce
            size: 8Gi
          ingress:
            enabled: false
            hostname: thanos-storegateway.local
            ingressClassName: ""
            annotations: {}
            extraHosts: []
            extraTls: []
            secrets: []
            extraRules: []
            tls: false
            selfSigned: false
            apiVersion: ""
            path: /
            pathType: ImplementationSpecific
            grpc:
              enabled: false
              hostname: thanos-grpc.local
              ingressClassName: ""
              annotations: {}
              extraHosts: []
              extraTls: []
              secrets: []
              extraRules: []
              tls: false
              selfSigned: false
              apiVersion: ""
              path: /
              pathType: ImplementationSpecific
        ruler:
          enabled: false
        receive:
          enabled: false
        receiveDistributor:
          enabled: false  
        metrics:
          enabled: false
          serviceMonitor:
            enabled: true
          prometheusRule:
            enabled: true
            default:
              create: true
        minio:
          enabled: false
    repoURL: https://charts.bitnami.com/bitnami
    chart: thanos
    targetRevision: 12.13.5
  syncPolicy: {}
